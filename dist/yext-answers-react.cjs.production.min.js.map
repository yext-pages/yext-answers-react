{"version":3,"file":"yext-answers-react.cjs.production.min.js","sources":["../node_modules/@yext/answers-core/src/models/searchservice/response/Source.ts","../node_modules/@yext/answers-core/src/AnswersCore.ts","../node_modules/@yext/answers-core/src/transformers/core/createFilter.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/createLocationBias.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/createSpellCheck.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/ResultsFactory.ts","../node_modules/@yext/answers-core/src/models/searchservice/request/QuerySource.ts","../node_modules/@yext/answers-core/src/models/searchservice/response/DirectAnswerType.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/createAppliedQueryFilter.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/createVerticalResults.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/createVerticalSearchResponse.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/createFacets.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/createDirectAnswer.ts","../node_modules/@yext/answers-core/src/serializers/serializeStaticFilters.ts","../node_modules/@yext/answers-core/src/infra/SearchServiceImpl.ts","../node_modules/@yext/answers-core/src/constants.ts","../node_modules/@yext/answers-core/src/transformers/searchservice/createUniversalSearchResponse.ts","../node_modules/@yext/answers-core/src/serializers/serializeFacets.ts","../node_modules/@yext/answers-core/src/infra/QuestionSubmissionServiceImpl.ts","../node_modules/@yext/answers-core/src/utils/urlutils.ts","../node_modules/@yext/answers-core/src/infra/HttpServiceImpl.ts","../node_modules/@yext/answers-core/src/transformers/autocompleteservice/createAutocompleteResult.ts","../node_modules/@yext/answers-core/src/transformers/autocompleteservice/createAutocompleteResponse.ts","../node_modules/@yext/answers-core/src/models/searchservice/common/Matcher.ts","../node_modules/@yext/answers-core/src/models/searchservice/request/CombinedFilter.ts","../node_modules/@yext/answers-core/src/models/searchservice/request/QueryTrigger.ts","../node_modules/@yext/answers-core/src/models/searchservice/request/SortType.ts","../node_modules/@yext/answers-core/src/models/searchservice/request/Direction.ts","../node_modules/@yext/answers-core/src/models/searchservice/response/LocationBias.ts","../node_modules/@yext/answers-core/src/models/searchservice/response/SearchIntent.ts","../node_modules/@yext/answers-core/src/models/searchservice/response/SpellCheck.ts","../node_modules/@yext/answers-core/src/infra/AutocompleteServiceImpl.ts","../node_modules/@yext/answers-core/src/models/answersapi/AnswersError.ts","../node_modules/@yext/answers-core/src/validation/ApiResponseValidator.ts","../node_modules/@yext/answers-core/src/index.ts","../src/initialState.ts","../src/createFacets.ts","../src/facetUtilties.tsx","../src/reducer.ts","../src/AnswersStore.tsx","../node_modules/regenerator-runtime/runtime.js","../src/useAnswers.ts","../src/AnswersContext.tsx","../src/useQueryParamManager.ts"],"sourcesContent":["/**\n * Represents the source of a {@link Result}.\n *\n * @public\n */\nexport enum Source {\n  /** The result is from an Answers Knowledge Graph. */\n  KnowledgeManager = 'KNOWLEDGE_MANAGER',\n  /** The result is from Google Custom Search Engine. */\n  Google = 'GOOGLE_CSE',\n  /** The result is from Bing Search Engine. */\n  Bing = 'BING_CSE',\n  /** The result is from Zendesk. */\n  Zendesk = 'ZENDESK',\n  /** The result is from Algolia. */\n  Algolia = 'ALGOLIA',\n  /** The result was from a generic source. */\n  Generic = 'GENERIC'\n}","import { SearchService } from './services/SearchService';\nimport { UniversalSearchRequest } from './models/searchservice/request/UniversalSearchRequest';\nimport { UniversalSearchResponse } from './models/searchservice/response/UniversalSearchResponse';\nimport { VerticalSearchRequest } from './models/searchservice/request/VerticalSearchRequest';\nimport { VerticalSearchResponse } from './models/searchservice/response/VerticalSearchResponse';\n\nimport { QuestionSubmissionService } from './services/QuestionSubmissionService';\nimport { QuestionSubmissionRequest } from './models/questionsubmission/QuestionSubmissionRequest';\nimport { QuestionSubmissionResponse } from './models/questionsubmission/QuestionSubmissionResponse';\nimport { UniversalAutocompleteRequest, VerticalAutocompleteRequest, FilterSearchRequest }\n  from './models/autocompleteservice/AutocompleteRequest';\nimport { AutocompleteResponse, FilterSearchResponse } from './models/autocompleteservice/AutocompleteResponse';\nimport { AutocompleteService } from './services/AutocompleteService';\n\n/**\n * Provides methods for executing searches, submitting questions, and performing autocompletes.\n *\n * @public\n */\nexport class AnswersCore {\n  /** @internal */\n  constructor(\n    private searchService: SearchService,\n    private questionSubmissionService: QuestionSubmissionService,\n    private autoCompleteService: AutocompleteService\n  ) {}\n\n  /**\n   * Performs an Answers search across all verticals.\n   *\n   * @remarks\n   * If rejected, the reason will be an {@link AnswersError}.\n   *\n   * @param request - Universal search request options\n   */\n  universalSearch(request: UniversalSearchRequest): Promise<UniversalSearchResponse> {\n    return this.searchService.universalSearch(request);\n  }\n\n  /**\n   * Performs an Answers search for a single vertical.\n   *\n   * @remarks\n   * If rejected, the reason will be an {@link AnswersError}.\n   *\n   * @param request - Vertical search request options\n   */\n  verticalSearch(request: VerticalSearchRequest): Promise<VerticalSearchResponse> {\n    return this.searchService.verticalSearch(request);\n  }\n\n  /**\n   * Submits a custom question to the Answers API.\n   *\n   * @remarks\n   * If rejected, the reason will be an {@link AnswersError}.\n   *\n   * @param request - Question submission request options\n   */\n  submitQuestion(request: QuestionSubmissionRequest): Promise<QuestionSubmissionResponse> {\n    return this.questionSubmissionService.submitQuestion(request);\n  }\n\n  /**\n   * Performs an autocomplete request across all verticals.\n   *\n   * @remarks\n   * If rejected, the reason will be an {@link AnswersError}.\n   *\n   * @param request - Universal autocomplete request options\n   */\n  universalAutocomplete(request: UniversalAutocompleteRequest): Promise<AutocompleteResponse> {\n    return this.autoCompleteService.universalAutocomplete(request);\n  }\n\n  /**\n   * Performs an autocomplete request for a single vertical.\n   *\n   * @remarks\n   * If rejected, the reason will be an {@link AnswersError}.\n   *\n   * @param request - Vertical autocomplete request options\n   */\n  verticalAutocomplete(request: VerticalAutocompleteRequest): Promise<AutocompleteResponse> {\n    return this.autoCompleteService.verticalAutocomplete(request);\n  }\n\n  /**\n   * Performs a filtersearch request against specified fields within a single vertical.\n   *\n   * @remarks\n   * This differs from the vertical autocomplete because the vertical autocomplete operates on all entity fields whereas\n   * filtersearch operates only on specified fields. If rejected, the reason will be an {@link AnswersError}.\n   *\n   * @example\n   * A site has a 'products' vertical and would like a way to allow the user to narrow down the results by the product name.\n   * The site can add a second search bar powered by filtersearch which will include only product names as search\n   * suggestions.\n   *\n   * @param request - filtersearch request options\n   */\n  filterSearch(request: FilterSearchRequest): Promise<FilterSearchResponse> {\n    return this.autoCompleteService.filterSearch(request);\n  }\n}","import { Filter } from '../../models/searchservice/request/Filter';\nimport { Matcher } from '../../models/searchservice/common/Matcher';\n\nexport function createFilter(filter: any): Filter {\n  const fieldId = Object.keys(filter)[0];\n  const matcher = Object.keys(filter[fieldId])[0];\n\n  return {\n    fieldId: fieldId,\n    matcher: matcher as Matcher,\n    value: filter[fieldId][matcher] as string | number | boolean\n  };\n}","import { LocationBias } from '../../models/searchservice/response/LocationBias';\n\nexport function createLocationBias(data: any): LocationBias {\n  return {\n    latitude: data.latitude,\n    longitude: data.longitude,\n    displayName: data.locationDisplayName,\n    method: data.accuracy\n  };\n}","import { SpellCheck } from '../../models/searchservice/response/SpellCheck';\n\nexport function createSpellCheck(data: any): SpellCheck {\n  return {\n    originalQuery: data.originalQuery,\n    correctedQuery: data.correctedQuery.value,\n    type: data.type,\n  };\n}","import { Result } from '../../models/searchservice/response/Result';\nimport { Source } from '../../models/searchservice/response/Source';\n\n/**\n * A factory which creates results from different sources\n */\nexport class ResultsFactory {\n  public static create(results: any, source: Source): Result[] {\n    if (!results) {\n      return [];\n    }\n\n    return results.map((result: any, index: number) => {\n      const resultIndex = index + 1;\n\n      switch (source) {\n        case Source.KnowledgeManager:\n          return this.fromKnowledgeManager(result, resultIndex);\n        case Source.Google:\n          return this.fromGoogleCustomSearchEngine(result, resultIndex);\n        case Source.Bing:\n          return this.fromBingCustomSearchEngine(result, resultIndex);\n        case Source.Zendesk:\n          return this.fromZendeskSearchEngine(result, resultIndex);\n        case Source.Algolia:\n          return this.fromAlgoliaSearchEngine(result, resultIndex);\n        default:\n          return this.fromGeneric(result, resultIndex);\n      }\n    });\n  }\n\n  private static fromKnowledgeManager(result: any, index: number): Result {\n    const rawData = result.data ?? result;\n    return {\n      rawData: rawData,\n      source: Source.KnowledgeManager,\n      index: index,\n      name: rawData.name,\n      description: rawData.description,\n      link: rawData.website,\n      id: rawData.id,\n      distance: result.distance,\n      distanceFromFilter: result.distanceFromFilter,\n      highlightedFields: result.highlightedFields,\n      entityType: rawData.type\n    };\n  }\n\n  private static fromGoogleCustomSearchEngine(result: any, index: number): Result {\n    const rawData = result.data ?? result;\n    return {\n      rawData: rawData,\n      source: Source.Google,\n      index: index,\n      name: rawData.htmlTitle.replace(/(<([^>]+)>)/ig, ''),\n      description: rawData.htmlSnippet,\n      link: rawData.link\n    };\n  }\n\n  private static fromBingCustomSearchEngine(result: any, index: number): Result {\n    const rawData = result.data ?? result;\n    return {\n      rawData: rawData,\n      source: Source.Bing,\n      index: index,\n      name: rawData.name,\n      description: rawData.snippet,\n      link: rawData.url\n    };\n  }\n\n  private static fromZendeskSearchEngine(result: any, index: number): Result {\n    const rawData = result.data ?? result;\n    return {\n      rawData: rawData,\n      source: Source.Zendesk,\n      index: index,\n      name: rawData.title,\n      description: rawData.snippet,\n      link: rawData.html_url\n    };\n  }\n\n  private static fromAlgoliaSearchEngine(result: any, index: number): Result {\n    const rawData = result.data ?? result;\n    return {\n      rawData: rawData,\n      source: Source.Algolia,\n      index: index,\n      name: rawData.name,\n      id: rawData.objectID\n    };\n  }\n\n  private static fromGeneric(result: any, index: number): Result {\n    const rawData = result.data ?? result;\n    return {\n      rawData: rawData,\n      source: Source.Generic,\n      index: index,\n      name: rawData.name,\n      description: rawData.description, // Do we want to truncate this like in the SDK?\n      link: rawData.website,\n      id: rawData.id\n    };\n  }\n\n  public static fromDirectAnswer(result: any): Result {\n    const rawData = result.fieldValues ?? {};\n    return {\n      rawData: rawData,\n      source: Source.KnowledgeManager,\n      name: rawData.name,\n      description: rawData.description,\n      link: result.website,\n      id: result.id,\n      entityType: result.type,\n    };\n  }\n}","/**\n * The source of the search request.\n *\n * @public\n */\nexport enum QuerySource {\n  /**\n   * Indicates that the query was initiated from a standard Answers integration.\n   */\n  Standard = 'STANDARD',\n  /**\n   * Indicates that the query was initaited from an Answers Overlay.\n   */\n  Overlay = 'OVERLAY'\n}","/**\n * Represents the type of direct answer.\n *\n * @public\n */\nexport enum DirectAnswerType {\n  /** Indicates that the DirectAnswer is a {@link FeaturedSnippetDirectAnswer}. */\n  FeaturedSnippet = 'FEATURED_SNIPPET',\n  /** Indicates that the DirectAnswer is a {@link FieldValueDirectAnswer}. */\n  FieldValue = 'FIELD_VALUE'\n}","import { AppliedQueryFilter } from '../../models/searchservice/response/AppliedQueryFilter';\nimport { createFilter } from '../core/createFilter';\n\nexport function createAppliedQueryFilter(data: any): AppliedQueryFilter {\n  return {\n    displayKey: data.displayKey,\n    displayValue: data.displayValue,\n    filter: createFilter(data.filter),\n    details: data.details\n  };\n}","import { ResultsFactory } from './ResultsFactory';\nimport { createAppliedQueryFilter } from './createAppliedQueryFilter';\nimport { VerticalResults } from '../../models/searchservice/response/VerticalResults';\n\nexport function createVerticalResults(data: any): VerticalResults {\n  console.log(\"createVerticalResults data: \", data);\n  console.log(\"createVerticalResults: \", data.appliedQueryFilters);\n  const appliedQueryFilters = data.appliedQueryFilters\n    ? data.appliedQueryFilters.map(createAppliedQueryFilter)\n    : [];\n\n  return {\n    appliedQueryFilters: appliedQueryFilters,\n    queryDurationMillis: data.queryDurationMillis,\n    results: ResultsFactory.create(data.results, data.source),\n    resultsCount: data.resultsCount,\n    source: data.source,\n    verticalKey: data.verticalConfigId,\n  };\n}","import { VerticalSearchResponse } from '../../models/searchservice/response/VerticalSearchResponse';\nimport { createFacets } from './createFacets';\nimport { createLocationBias } from './createLocationBias';\nimport { createSpellCheck } from './createSpellCheck';\nimport { createVerticalResults } from './createVerticalResults';\n\nexport function createVerticalSearchResponse(data: any): VerticalSearchResponse {\n  if (!data.response){\n    throw new Error('The search data does not contain a response property');\n  }\n  console.log(\"createVerticalSearchResponse:\", data.response);\n  return {\n    verticalResults: createVerticalResults(data.response),\n    queryId: data.response.queryId,\n    searchIntents: data.response.searchIntents,\n    facets: createFacets(data.response.facets),\n    spellCheck: data.response.spellCheck && createSpellCheck(data.response.spellCheck),\n    locationBias: data.response.locationBias && createLocationBias(data.response.locationBias),\n    allResultsForVertical: data.response.allResultsForVertical\n      && createVerticalSearchResponse({ response: data.response.allResultsForVertical }),\n    alternativeVerticals: data.response.alternativeVerticals && data.response.alternativeVerticals.modules\n      && data.response.alternativeVerticals.modules.map(createVerticalResults),\n    uuid: data.meta?.uuid\n  };\n}","import { DisplayableFacet, DisplayableFacetOption } from '../../models/searchservice/response/DisplayableFacet';\nimport { createFilter } from '../core/createFilter';\n\nexport function createFacets(facets: any): DisplayableFacet[] {\n  if (!facets) {\n    return [];\n  }\n\n  return facets.map((facet: any) => ({\n    fieldId: facet.fieldId,\n    displayName: facet.displayName,\n    options: createFacetOptions(facet.options)\n  }));\n}\n\nfunction createFacetOptions(options: any[]): DisplayableFacetOption[] {\n  return options.map((option: any) => {\n    const filter = createFilter(option.filter);\n\n    return {\n      displayName: option.displayName,\n      count: option.count,\n      selected: option.selected,\n      matcher: filter.matcher,\n      value: filter.value as string | number | boolean\n    };\n  });\n}\n","import { FeaturedSnippetDirectAnswer } from '../../models/searchservice/response/FeaturedSnippetDirectAnswer';\nimport { FieldValueDirectAnswer } from '../../models/searchservice/response/FieldValueDirectAnswer';\nimport { DirectAnswerType } from '../../models/searchservice/response/DirectAnswerType';\nimport { ResultsFactory } from './ResultsFactory';\n\nexport function createDirectAnswer(data: any): FeaturedSnippetDirectAnswer | FieldValueDirectAnswer {\n  const isFieldValueDirectAnswer = data?.type === DirectAnswerType.FieldValue;\n  const isFeaturedSnippetDirectAnswer = data?.type === DirectAnswerType.FeaturedSnippet;\n  if (isFieldValueDirectAnswer) {\n    return {\n      type: DirectAnswerType.FieldValue,\n      value: data.answer.value,\n      relatedResult: ResultsFactory.fromDirectAnswer(data.relatedItem.data),\n      verticalKey: data.relatedItem.verticalConfigId,\n      entityName: data.answer.entityName,\n      fieldName: data.answer.fieldName,\n      fieldApiName: data.answer.fieldApiName,\n      fieldType: data.answer.fieldType\n    };\n  } else if (isFeaturedSnippetDirectAnswer) {\n    return {\n      type: DirectAnswerType.FeaturedSnippet,\n      value: data.answer.value,\n      relatedResult: ResultsFactory.fromDirectAnswer(data.relatedItem.data),\n      verticalKey: data.relatedItem.verticalConfigId,\n      snippet: data.answer.snippet,\n    };\n  } else {\n    throw new Error('The Answers API returned an unknown direct answer type');\n  }\n}","import { CombinedFilter } from '../models/searchservice/request/CombinedFilter';\nimport { Filter } from '../models/searchservice/request/Filter';\nimport { StaticFilters } from '../models/searchservice/request/StaticFilters';\n\nexport function serializeStaticFilters(\n  filter: CombinedFilter | Filter): string | undefined {\n  if (isCombinedFilter(filter)) {\n    return JSON.stringify(shapeCombinedFilterForApi(filter));\n  }\n\n  return JSON.stringify(shapeFilterForApi(filter));\n}\n\nfunction shapeCombinedFilterForApi(combinedFilter: CombinedFilter): StaticFilters {\n  const shapedFilters: StaticFilters[] = [];\n  for (const filter of combinedFilter.filters) {\n    if (isCombinedFilter(filter)) {\n      shapedFilters.push(shapeCombinedFilterForApi(filter));\n    } else {\n      shapedFilters.push(shapeFilterForApi(filter));\n    }\n  }\n  return shapedFilters.length === 1\n    ? shapedFilters[0]\n    : { [combinedFilter.combinator]: shapedFilters };\n}\n\nexport function shapeFilterForApi(filter: Filter): StaticFilters {\n  return {\n    [filter.fieldId]: {\n      [filter.matcher]: filter.value\n    }\n  };\n}\n\nfunction isCombinedFilter(filter: CombinedFilter | Filter): filter is CombinedFilter {\n  return ((filter as CombinedFilter).filters !== undefined)\n    && ((filter as CombinedFilter).combinator !== undefined);\n}","import { createVerticalSearchResponse } from '../transformers/searchservice/createVerticalSearchResponse';\nimport { SearchService } from '../services/SearchService';\nimport { defaultApiVersion, defaultEndpoints } from '../constants';\nimport { QueryParams } from '../models/http/params';\nimport { QueryTrigger } from '../models/searchservice/request/QueryTrigger';\nimport { QuerySource } from '../models/searchservice/request/QuerySource';\nimport { UniversalSearchRequest } from '../models/searchservice/request/UniversalSearchRequest';\nimport { UniversalSearchResponse } from '../models/searchservice/response/UniversalSearchResponse';\nimport { createUniversalSearchResponse } from '../transformers/searchservice/createUniversalSearchResponse';\nimport { HttpService } from '../services/HttpService';\nimport { AnswersConfig } from '../models/core/AnswersConfig';\nimport { VerticalSearchRequest } from '../models/searchservice/request/VerticalSearchRequest';\nimport { VerticalSearchResponse } from '../models/searchservice/response/VerticalSearchResponse';\nimport { serializeStaticFilters } from '../serializers/serializeStaticFilters';\nimport { serializeFacets } from '../serializers/serializeFacets';\nimport { ApiResponseValidator } from '../validation/ApiResponseValidator';\nimport { ApiResponse } from '../models/answersapi/ApiResponse';\n\n/**\n * Represents the query params which may be sent in a universal search.\n *\n * @internal\n */\ninterface UniversalSearchQueryParams extends QueryParams {\n  input: string,\n  experienceKey: string,\n  api_key: string,\n  v: number,\n  version?: string | number,\n  location?: string,\n  locale?: string,\n  skipSpellCheck?: boolean,\n  sessionTrackingEnabled?: boolean\n  queryTrigger?: QueryTrigger,\n  context?: string;\n  referrerPageUrl?: string,\n  source?: QuerySource\n}\n\n/**\n * Represents the query params which may be sent in a vertical search.\n *\n * @internal\n */\ninterface VerticalSearchQueryParams extends QueryParams {\n  experienceKey: string,\n  api_key: string,\n  v: number,\n  version?: string | number,\n  locale?: string,\n  input: string,\n  location?: string,\n  verticalKey: string,\n  filters?: string,\n  limit?: number,\n  offset?: number,\n  retrieveFacets?: boolean,\n  facetFilters?: string,\n  skipSpellCheck?: boolean,\n  queryTrigger?: QueryTrigger,\n  sessionTrackingEnabled?: boolean,\n  sortBys?: string,\n  context?: string,\n  referrerPageUrl?: string,\n  source?: QuerySource,\n  locationRadius?: string,\n  queryId?: string\n}\n\n/**\n * The implementation of SearchService which hits LiveAPI.\n *\n * @internal\n */\nexport class SearchServiceImpl implements SearchService {\n  private config: AnswersConfig;\n  private httpService: HttpService;\n  private apiResponseValidator: ApiResponseValidator;\n  private verticalSearchEndpoint: string;\n  private universalSearchEndpoint: string;\n\n  constructor(\n    config: AnswersConfig,\n    httpService: HttpService,\n    apiResponseValidator: ApiResponseValidator\n  ) {\n    this.config = config;\n    this.httpService = httpService;\n    this.apiResponseValidator = apiResponseValidator;\n    this.universalSearchEndpoint = config.endpoints?.universalSearch\n      ?? defaultEndpoints.universalSearch;\n    this.verticalSearchEndpoint = config.endpoints?.verticalSearch\n      ?? defaultEndpoints.verticalSearch;\n  }\n\n  async universalSearch(request: UniversalSearchRequest): Promise<UniversalSearchResponse> {\n    this.injectToStringMethods(request);\n\n    const queryParams: UniversalSearchQueryParams = {\n      input: request.query,\n      experienceKey: this.config.experienceKey,\n      api_key: this.config.apiKey,\n      v: defaultApiVersion,\n      version: this.config.experienceVersion,\n      location: request.location?.toString(),\n      locale: this.config.locale,\n      skipSpellCheck: request.skipSpellCheck,\n      sessionTrackingEnabled: request.sessionTrackingEnabled,\n      queryTrigger: request.queryTrigger,\n      context: JSON.stringify(request.context || undefined),\n      referrerPageUrl: request.referrerPageUrl,\n      source: request.querySource || QuerySource.Standard\n    };\n\n    const response =\n      await this.httpService.get<ApiResponse>(this.universalSearchEndpoint, queryParams);\n\n    const validationResult = this.apiResponseValidator.validate(response);\n    if (validationResult instanceof Error) {\n      return Promise.reject(validationResult);\n    }\n\n    return createUniversalSearchResponse(response);\n  }\n\n  async verticalSearch(request: VerticalSearchRequest): Promise<VerticalSearchResponse> {\n    this.injectToStringMethods(request);\n\n    const queryParams: VerticalSearchQueryParams = {\n      experienceKey: this.config.experienceKey,\n      api_key: this.config.apiKey,\n      v: defaultApiVersion,\n      version: this.config.experienceVersion,\n      locale: this.config.locale,\n      input: request.query,\n      location: request.location?.toString(),\n      verticalKey: request.verticalKey,\n      filters: request.staticFilters && serializeStaticFilters(request.staticFilters),\n      limit: request.limit,\n      offset: request.offset,\n      retrieveFacets: request.retrieveFacets,\n      facetFilters: request.facets && serializeFacets(request.facets),\n      skipSpellCheck: request.skipSpellCheck,\n      queryTrigger: request.queryTrigger,\n      sessionTrackingEnabled: request.sessionTrackingEnabled,\n      sortBys: JSON.stringify(request.sortBys || []),\n      context: JSON.stringify(request.context || undefined),\n      referrerPageUrl: request.referrerPageUrl,\n      source: request.querySource || QuerySource.Standard,\n      locationRadius: request.locationRadius?.toString(),\n      queryId: request.queryId\n    };\n\n    const response =\n      await this.httpService.get<ApiResponse>(this.verticalSearchEndpoint, queryParams);\n\n    const validationResult = this.apiResponseValidator.validate(response);\n    if (validationResult instanceof Error) {\n      return Promise.reject(validationResult);\n    }\n\n    return createVerticalSearchResponse(response);\n  }\n\n  /**\n   * Injects toString() methods into the request objects that require them\n   */\n  private injectToStringMethods(request: UniversalSearchRequest): void {\n    if (request.location) {\n      request.location.toString = function() {\n        return `${this.latitude},${this.longitude}`;\n      };\n    }\n  }\n}","import { Endpoints } from './models/core/Endpoints';\n\nexport const defaultApiVersion = 20190101;\n\nexport const defaultEndpoints: Required<Endpoints> = {\n  universalSearch: 'https://liveapi.yext.com/v2/accounts/me/answers/query',\n  verticalSearch: 'https://liveapi.yext.com/v2/accounts/me/answers/vertical/query',\n  questionSubmission: 'https://api.yext.com/v2/accounts/me/createQuestion',\n  status: 'https://answersstatus.pagescdn.com',\n  universalAutocomplete: 'https://liveapi-cached.yext.com/v2/accounts/me/answers/autocomplete',\n  verticalAutocomplete: 'https://liveapi-cached.yext.com/v2/accounts/me/answers/vertical/autocomplete',\n  filterSearch: 'https://liveapi-cached.yext.com/v2/accounts/me/answers/filtersearch',\n};","import { UniversalSearchResponse } from '../../models/searchservice/response/UniversalSearchResponse';\nimport { createVerticalResults } from './createVerticalResults';\nimport { createDirectAnswer } from './createDirectAnswer';\nimport { createSpellCheck } from './createSpellCheck';\nimport { createLocationBias } from './createLocationBias';\n\nexport function createUniversalSearchResponse(data: any): UniversalSearchResponse {\n  const verticalResults = Array.isArray(data.response.modules)\n    ? data.response.modules.map(createVerticalResults)\n    : [];\n    console.log(\"createUniversalSearchResponse:\", data.response);\n\n  return {\n    verticalResults: verticalResults,\n    queryId: data.response.queryId,\n    directAnswer: data.response.directAnswer && createDirectAnswer(data.response.directAnswer),\n    searchIntents: data.response.searchIntents,\n    spellCheck: data.response.spellCheck && createSpellCheck(data.response.spellCheck),\n    locationBias: data.response.locationBias && createLocationBias(data.response.locationBias),\n    uuid: data.meta.uuid\n  };\n}","import { Facet, FacetOption } from '../models/searchservice/request/Facet';\nimport { StaticFilters } from '../models/searchservice/request/StaticFilters';\nimport { shapeFilterForApi } from './serializeStaticFilters';\n\nexport function serializeFacets(filters: Facet[]): string {\n  return JSON.stringify(filters.reduce((obj, facet) => {\n    const fieldId = facet.fieldId;\n    const shapedFacets = shapeFacetOptionArrayForApi(facet.options, fieldId);\n    obj[fieldId] = shapedFacets;\n    return obj;\n  }, {} as { [key: string]: StaticFilters[] }));\n}\n\nfunction shapeFacetOptionArrayForApi(options: FacetOption[], fieldId: string): StaticFilters[] {\n  return options.map((option) => {\n    return shapeFilterForApi({...option, fieldId: fieldId});\n  });\n}","import { defaultApiVersion, defaultEndpoints } from '../constants';\nimport { QuestionSubmissionService } from '../services/QuestionSubmissionService';\nimport { HttpService } from '../services/HttpService';\nimport { AnswersConfig } from '../models/core/AnswersConfig';\nimport { QuestionSubmissionRequest } from '../models/questionsubmission/QuestionSubmissionRequest';\nimport { QuestionSubmissionResponse } from '../models/questionsubmission/QuestionSubmissionResponse';\nimport { ApiResponseValidator } from '../validation/ApiResponseValidator';\nimport { ApiResponse } from '../models/answersapi/ApiResponse';\n\n/**\n * An implementation of QuestionSubmissionService which hits LiveAPI.\n *\n * @internal\n */\nexport class QuestionSubmissionServiceImpl implements QuestionSubmissionService {\n  private config: AnswersConfig;\n  private httpService: HttpService;\n  private apiResponseValidator: ApiResponseValidator;\n  private endpoint: string;\n\n  constructor(\n    config: AnswersConfig,\n    httpService: HttpService,\n    apiResponseValidator: ApiResponseValidator\n  ) {\n    this.config = config;\n    this.httpService = httpService;\n    this.apiResponseValidator = apiResponseValidator;\n    this.endpoint = this.config.endpoints?.questionSubmission\n      ?? defaultEndpoints.questionSubmission;\n  }\n\n  async submitQuestion(request: QuestionSubmissionRequest): Promise<QuestionSubmissionResponse> {\n    const queryParams = {\n      v: defaultApiVersion,\n      api_key: this.config.apiKey,\n      sessionTrackingEnabled: request.sessionTrackingEnabled\n    };\n\n    const body = {\n      email: request.email,\n      entityId: request.entityId,\n      name: request.name,\n      questionDescription: request.questionDescription,\n      questionLanguage: this.config.locale,\n      questionText: request.questionText,\n      site: 'FIRSTPARTY'\n    };\n\n    const requestInit = {\n      mode: 'cors' as RequestMode,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const response = await this.httpService.post<ApiResponse>(\n      this.endpoint,\n      queryParams,\n      body,\n      requestInit\n    );\n\n    const validationResult = this.apiResponseValidator.validate(response);\n    if (validationResult instanceof Error) {\n      return Promise.reject(validationResult);\n    }\n\n    return {\n      uuid: response.meta.uuid\n    };\n  }\n}\n","import { QueryParams, SanitizedQueryParams } from '../models/http/params';\n\n/**\n * Updates a url with the given params.\n */\nexport function addParamsToURL(\n  url: string,\n  params: QueryParams\n): string {\n  const parsedUrl = new URL(url);\n  const urlParams = new URLSearchParams(parsedUrl.search.substring(1));\n\n  const sanitizedParams: SanitizedQueryParams = sanitizeQueryParams (params);\n\n  for (const key in sanitizedParams) {\n    urlParams.append(key, sanitizedParams[key].toString());\n  }\n  let updatedUrl = parsedUrl.origin + parsedUrl.pathname;\n  const paramsString = urlParams.toString();\n  if (paramsString) {\n    updatedUrl += '?' + paramsString;\n  }\n  return updatedUrl;\n}\n\nexport function sanitizeQueryParams(params: QueryParams): SanitizedQueryParams {\n  Object.keys(params).forEach(key => {\n    if ( params[key] === undefined || params[key] === null ) {\n      delete params[key];\n    }\n  });\n\n  return params as SanitizedQueryParams;\n}\n","import fetch from 'cross-fetch';\nimport { addParamsToURL, sanitizeQueryParams } from '../utils/urlutils';\nimport { QueryParams } from '../models/http/params';\nimport { HttpService } from '../services/HttpService';\n\n/**\n * Available HTTP request methods\n */\nenum RequestMethods {\n  GET = 'get',\n  POST = 'post',\n}\n\n/**\n * HttpServiceImpl is a wrapper around the native implementation of AJAX\n * related matters.\n */\nexport class HttpServiceImpl implements HttpService {\n  /**\n   * Perform a GET request\n   */\n  get<T>(\n    url: string,\n    queryParams: QueryParams,\n    options?: RequestInit,\n  ): Promise<T> {\n    const reqInitWithMethod = {\n      method: RequestMethods.GET,\n      ...options\n    };\n    return this.fetch(url, queryParams, reqInitWithMethod)\n      .then(res => res.json());\n  }\n\n  /**\n   * Perform a POST request\n   */\n  post<T>(\n    url: string,\n    queryParams: QueryParams,\n    body: QueryParams,\n    reqInit: RequestInit\n  ): Promise<T> {\n    const sanitizedBodyParams = sanitizeQueryParams(body);\n    const reqInitWithMethodAndBody = {\n      method: RequestMethods.POST,\n      body: JSON.stringify(sanitizedBodyParams),\n      ...reqInit\n    };\n    return this.fetch(url, queryParams, reqInitWithMethodAndBody)\n      .then(res => res.json());\n  }\n\n  /**\n   * Perform a fetch, using the polyfill if needed.\n   */\n  private fetch(\n    url: string,\n    queryParams: QueryParams,\n    reqInit: RequestInit\n  ): Promise<Response> {\n    const urlWithParams = addParamsToURL(url, queryParams);\n    return fetch(urlWithParams, reqInit);\n  }\n}\n","import { AutocompleteResult } from '../../models/autocompleteservice/AutocompleteResponse';\nimport { Source } from '../../models/searchservice/response/Source';\nimport { createFilter } from '../core/createFilter';\nimport { ResultsFactory } from '../searchservice/ResultsFactory';\n\nexport function createAutocompleteResult(result: any): AutocompleteResult {\n  const relatedItem = result.relatedItem\n    ? ResultsFactory.create([result.relatedItem], Source.KnowledgeManager)[0]\n    : result.relatedItem;\n  return {\n    filter: result.filter && createFilter(result.filter),\n    key: result.key,\n    matchedSubstrings: result.matchedSubstrings || [],\n    value: result.value,\n    relatedItem: relatedItem\n  };\n}\n","import { AutocompleteResponse, AutocompleteResult, FilterSearchResponse } from '../../models/autocompleteservice/AutocompleteResponse';\nimport { createAutocompleteResult } from './createAutocompleteResult';\n\nexport function createAutocompleteResponse(data: any): AutocompleteResponse {\n  if (!data.response) {\n    throw new Error('The autocomplete data does not contain a response property');\n  }\n  if (!Object.keys(data.response).length) {\n    throw new Error('The autocomplete response is empty');\n  }\n\n  const response = data.response;\n  const responseResults = response.results.map(createAutocompleteResult);\n  const inputIntents = response.input ? response.input.queryIntents : [];\n  return {\n    results: responseResults,\n    queryId: response.queryId,\n    inputIntents: inputIntents || [],\n    uuid: data.meta.uuid\n  };\n}\n\nexport function createFilterSearchResponse(data: any): FilterSearchResponse {\n  if (!data.response) {\n    throw new Error('The autocomplete data does not contain a response property');\n  }\n  if (!Object.keys(data.response).length) {\n    throw new Error('The autocomplete response is empty');\n  }\n\n  const response = data.response;\n  let isSectioned = false;\n  let sections = [];\n  let responseResults: AutocompleteResult[] = [];\n  // a filtersearch response may have a sections object\n  if (response.sections) {\n    isSectioned = true;\n    sections = response.sections.map((section: any) => ({\n      label: section.label,\n      results: section.results.map(createAutocompleteResult)\n    }));\n  } else {\n    responseResults = response.results.map(createAutocompleteResult);\n  }\n  const inputIntents = response.input ? response.input.queryIntents : [];\n  return {\n    sectioned: isSectioned,\n    sections: sections,\n    results: responseResults,\n    queryId: response.queryId,\n    inputIntents: inputIntents || [],\n    uuid: data.meta.uuid\n  };\n}\n","/**\n * A Matcher is a filtering operation.\n *\n * @public\n */\nexport enum Matcher {\n  /**\n   * An equals comparison.\n   *\n   * @remarks\n   * Compatible with all field types.\n   */\n  Equals = '$eq',\n  /**\n   * A not equals comparison.\n   *\n   * @remarks\n   * Compatible with all field types.\n   */\n  NotEquals = '!$eq',\n  /**\n   * A less than comparison.\n   *\n   * @remarks\n   * Compatible with integer, float, date, datetime, and time fields.\n   */\n  LessThan = '$lt',\n  /**\n   * A less than or equal to comparison.\n   *\n   * @remarks\n   * Compatible with integer, float, date, datetime, and time fields.\n   */\n  LessThanOrEqualTo = '$le',\n  /**\n   * A greater than comparison.\n   *\n   * @remarks\n   * Compatible with integer, float, date, datetime, and time fields.\n   */\n  GreaterThan = '$gt',\n  /**\n   * A greater than or equal to comparison.\n   *\n   * @remarks\n   * Compatible with integer, float, date, datetime, and time fields.\n   */\n  GreaterThanOrEqualTo = '$ge',\n  /**\n   * A comparison of whether an entity is within a certain radius of a certain location.\n   *\n   * @remarks\n   * Only compatible with the builtin.location field.\n   */\n  Near = '$near'\n}","import { Filter } from './Filter';\n\n/**\n * Represents multiple filters that will be combined to refine results.\n *\n * @public\n */\nexport interface CombinedFilter {\n  /** An array of filters applied to the search. */\n  filters: (Filter | CombinedFilter)[];\n  /** The logical operator used to combine the filters. */\n  combinator: FilterCombinator;\n}\n\n/**\n * Indicates how the filters in a {@link CombinedFilter} should be combined.\n *\n * @public\n */\nexport enum FilterCombinator {\n  /** Indicates that filters should be combined with a logical AND. */\n  AND = '$and',\n  /** Indicates that filters should be combined with a logical OR. */\n  OR = '$or'\n}","/**\n * Describes the ways a search can be executed besides user input.\n *\n * @remarks\n * Used for search analytics. If a user supplied the search query, do not include a QueryTrigger.\n *\n * @example\n * An answers site may be configured to perform a search for 'What services do you offer?' when the page\n * loads. Because that query is a default query rather than a user-supplied query, the Initialize QueryTrigger\n * should be included in the request.\n *\n * @public\n */\nexport enum QueryTrigger {\n  /** Indicates that the query was triggered by a default initial search. */\n  Initialize = 'initialize',\n  /** Indicates that the query was suggested by a {@link SpellCheck} response. */\n  Suggest = 'suggest'\n}","/**\n * The method of sorting.\n *\n * @public\n */\nexport enum SortType {\n  /**\n   * Sorts based on a field with the direction specified.\n   */\n  Field = 'FIELD',\n  /**\n   * Sorts based on entity distance alone.\n   */\n  EntityDistance = 'ENTITY_DISTANCE',\n  /**\n   * Sorts based on relevance according to the algorithm and, when relevant, location bias.\n   */\n  Relevance = 'RELEVANCE'\n}","/**\n * The direction of a sort.\n *\n * @public\n */\nexport enum Direction {\n  /**\n   *  An ascending sort\n   *\n   * @remarks\n   * For numbers this sort is low to high. For text it is alphabetical. For dates it is chronological order.\n   */\n  Ascending = 'ASC',\n  /**\n   * A descending soft\n   *\n   * @remarks\n   * For numbers this sort is high to low. For text it is reverse alphabetical. For dates it is reverse\n   * chronological order.\n   */\n  Descending = 'DESC'\n}","/**\n * Information about the user's location.\n *\n * @public\n */\nexport interface LocationBias {\n  /** The location's latitude. */\n  latitude: number;\n  /** The location's longitude. */\n  longitude: number;\n  /**\n   * The name of the location.\n   *\n   * @example\n   * Arlington, Virginia.\n   */\n  displayName: string;\n  /** {@inheritDoc LocationBiasMethod} */\n  method: LocationBiasMethod;\n}\n\n/**\n * The method used to determine the location.\n *\n * @public\n */\nexport enum LocationBiasMethod {\n  /** Location was determined by IP address. */\n  Ip = 'IP',\n  /**\n   * Location was supplied by the user's device.\n   *\n   * @remarks\n   * This location bias method is set when a location is supplied in search requests.\n   * */\n  Device = 'DEVICE',\n  /**\n   * Location is unknown.\n   */\n  Unknown = 'UNKNOWN'\n}\n","/**\n * Represents intents from the Answers API.\n *\n * @public\n */\nexport enum SearchIntent {\n  /** The Answers API is requesting a prompt for the user's location. */\n  NearMe = 'NEAR_ME'\n}","/**\n * A spellcheck response from a search query.\n *\n * @public\n */\nexport interface SpellCheck {\n  /** The query that was input into the spell checker. */\n  originalQuery: string;\n  /** The corrected version of the originalQuery. */\n  correctedQuery: string;\n  /** The type of spell check. */\n  type: SpellCheckType;\n}\n\n/**\n * Represents the type of spell check performed.\n *\n * @public\n */\nexport enum SpellCheckType {\n  /** The API is suggesting an alternative query. */\n  Suggest = 'SUGGEST',\n  /** The API is autocorrecting the original query. */\n  AutoCorrect = 'AUTOCORRECT',\n  /** The API may be doing some combination of suggesting or autocorrecting. */\n  Combine = 'COMBINE'\n}\n","import { createAutocompleteResponse, createFilterSearchResponse } from '../transformers/autocompleteservice/createAutocompleteResponse';\nimport { VerticalAutocompleteRequest, FilterSearchRequest,\n  UniversalAutocompleteRequest, SearchParameterField }\n  from '../models/autocompleteservice/AutocompleteRequest';\nimport { AutocompleteResponse, FilterSearchResponse } from '../models/autocompleteservice/AutocompleteResponse';\nimport { defaultApiVersion, defaultEndpoints } from '../constants';\nimport { AnswersConfig } from '../models/core/AnswersConfig';\nimport { HttpService }from '../services/HttpService';\nimport { AutocompleteQueryParams } from '../models/autocompleteservice/AutocompleteQueryParams';\nimport { AutocompleteService } from '../services/AutocompleteService';\nimport { ApiResponseValidator } from '../validation/ApiResponseValidator';\nimport { ApiResponse } from '../models/answersapi/ApiResponse';\n\n/**\n * Internal interface representing the query params which are sent for a vertical\n * autocomplete request.\n */\ninterface VerticalAutocompleteQueryParams extends AutocompleteQueryParams {\n  verticalKey?: string,\n}\n\n/**\n * Internal interface representing the query params which are sent for a filter\n * autocomplete request.\n */\ninterface FilterSearchQueryParams extends AutocompleteQueryParams {\n  verticalKey?: string,\n  search_parameters?: string\n}\n\n/**\n* A service that performs query suggestions.\n*/\nexport class AutocompleteServiceImpl implements AutocompleteService {\n  private config: AnswersConfig;\n  private httpService: HttpService;\n  private apiResponseValidator;\n  private universalEndpoint: string;\n  private verticalEndpoint: string;\n  private filterEndpoint: string;\n\n  constructor(\n    config: AnswersConfig,\n    httpRequester: HttpService,\n    apiResponseValidator: ApiResponseValidator\n  ) {\n    this.config = config;\n    this.httpService = httpRequester;\n    this.apiResponseValidator = apiResponseValidator;\n    this.universalEndpoint = this.config.endpoints?.universalAutocomplete\n      ?? defaultEndpoints.universalAutocomplete;\n    this.verticalEndpoint = this.config.endpoints?.verticalAutocomplete\n      ?? defaultEndpoints.verticalAutocomplete;\n    this.filterEndpoint = this.config.endpoints?.filterSearch\n      ?? defaultEndpoints.filterSearch;\n  }\n\n  /**\n   * Retrieves query suggestions for universal.\n   *\n   * @param {AutocompleteRequest} request\n   * @returns {Promise<AutocompleteResponse>}\n   */\n  async universalAutocomplete(request: UniversalAutocompleteRequest): Promise<AutocompleteResponse> {\n    const queryParams: AutocompleteQueryParams = {\n      input: request.input,\n      experienceKey: this.config.experienceKey,\n      api_key: this.config.apiKey,\n      v: defaultApiVersion,\n      version: this.config.experienceVersion,\n      locale: this.config.locale,\n      sessionTrackingEnabled: request.sessionTrackingEnabled\n    };\n\n    const response = await this.httpService.get<ApiResponse>(\n      this.universalEndpoint,\n      queryParams);\n\n    const validationResult = this.apiResponseValidator.validate(response);\n    if (validationResult instanceof Error) {\n      return Promise.reject(validationResult);\n    }\n\n    return createAutocompleteResponse(response);\n  }\n\n  /**\n   * Retrieves query suggestions for a vertical.\n   *\n   * @param {VerticalAutocompleteRequest} request\n   * @returns {Promise<AutocompleteResponse>}\n   */\n  async verticalAutocomplete(request: VerticalAutocompleteRequest): Promise<AutocompleteResponse> {\n    const queryParams: VerticalAutocompleteQueryParams = {\n      input: request.input,\n      experienceKey: this.config.experienceKey,\n      api_key: this.config.apiKey,\n      v: defaultApiVersion,\n      version: this.config.experienceVersion,\n      locale: this.config.locale,\n      verticalKey: request.verticalKey,\n      sessionTrackingEnabled: request.sessionTrackingEnabled\n    };\n\n    const response = await this.httpService.get<ApiResponse>(\n      this.verticalEndpoint,\n      queryParams);\n\n    const validationResult = this.apiResponseValidator.validate(response);\n    if (validationResult instanceof Error) {\n      return Promise.reject(validationResult);\n    }\n\n    return createAutocompleteResponse(response);\n  }\n\n  /**\n   * Retrieves query suggestions for filter search.\n   *\n   * @param {FilterSearchRequest} request\n   * @returns {Promise<AutocompleteResponse>}\n   */\n  async filterSearch(request: FilterSearchRequest): Promise<FilterSearchResponse> {\n    const searchParams = {\n      sectioned: request.sectioned,\n      fields: this.serializeSearchParameterFields(request.fields)\n    };\n    const queryParams: FilterSearchQueryParams = {\n      input: request.input,\n      experienceKey: this.config.experienceKey,\n      api_key: this.config.apiKey,\n      v: defaultApiVersion,\n      version: this.config.experienceVersion,\n      locale: this.config.locale,\n      search_parameters: JSON.stringify(searchParams),\n      verticalKey: request.verticalKey,\n      sessionTrackingEnabled: request.sessionTrackingEnabled\n    };\n\n    const response = await this.httpService.get<ApiResponse>(\n      this.filterEndpoint,\n      queryParams);\n\n    const validationResult = this.apiResponseValidator.validate(response);\n    if (validationResult instanceof Error) {\n      return Promise.reject(validationResult);\n    }\n\n    return createFilterSearchResponse(response);\n  }\n\n  private serializeSearchParameterFields(fields: SearchParameterField[]) {\n    return fields.map(({ fieldApiName, entityType, fetchEntities}) => (\n      {\n        fieldId: fieldApiName,\n        entityTypeId: entityType,\n        shouldFetchEntities: fetchEntities\n      }\n    ));\n  }\n }","/**\n * Represents an error\n *\n * @remarks\n * If the error originates from the Answer API, the code and type property will be present.\n *\n * @public\n */\nexport class AnswersError extends Error {\n  /** The error message. */\n  public message: string;\n  /** Answers API error code. */\n  public code?: number;\n  /** Answers API error type. */\n  public type?: string;\n\n  /** @internal */\n  constructor(message: string, code?: number, type?: string) {\n    super(message);\n\n    this.message = message;\n    this.code = code;\n    this.type = type;\n  }\n}","import { ApiResponse } from '../models/answersapi/ApiResponse';\nimport { AnswersError } from '../models/answersapi/AnswersError';\n\n/**\n * Determines whether or not an API response can be used to construct an answers-core response\n *\n * @internal\n */\nexport class ApiResponseValidator {\n  public validate(apiResponse: ApiResponse): AnswersError | undefined {\n    const testFunctions = [\n      this.validateResponseProp,\n      this.validateMetaProp,\n      this.checkForApiErrors\n    ];\n\n    const testResults = testFunctions.map(testFn => testFn(apiResponse));\n\n    return testResults.find(result => result instanceof AnswersError);\n  }\n\n  private validateResponseProp(apiResponse: ApiResponse): AnswersError | undefined {\n    if (!apiResponse.response){\n      return new AnswersError('Malformed Answers API response: missing response property.');\n    }\n  }\n\n  private validateMetaProp(apiResponse: ApiResponse): AnswersError | undefined {\n    if (!apiResponse.meta){\n      return new AnswersError('Malformed Answers API response: missing meta property.');\n    }\n  }\n\n  private checkForApiErrors(apiResponse: ApiResponse): AnswersError | undefined {\n    if(apiResponse.meta?.errors?.length >= 1){\n      const error = apiResponse.meta.errors[0];\n      return new AnswersError(error.message, error.code, error.type);\n    }\n  }\n}","import { AnswersCore } from './AnswersCore';\nimport { SearchServiceImpl } from './infra/SearchServiceImpl';\nimport { QuestionSubmissionServiceImpl } from './infra/QuestionSubmissionServiceImpl';\nimport { HttpServiceImpl } from './infra/HttpServiceImpl';\nimport { AnswersConfig } from './models/core/AnswersConfig';\nimport { AutocompleteServiceImpl } from './infra/AutocompleteServiceImpl';\nimport { ApiResponseValidator } from './validation/ApiResponseValidator';\n\n/**\n * The entrypoint to the answers-core library.\n *\n * @remarks\n * Returns an {@link AnswersCore} instance.\n *\n * @param config - The answers-core config\n *\n * @public\n */\nexport function provideCore(config: AnswersConfig): AnswersCore {\n  const httpService = new HttpServiceImpl();\n  const apiResponseValidator = new ApiResponseValidator();\n\n  const searchService = new SearchServiceImpl(config, httpService, apiResponseValidator);\n  const questionSubmissionService = new QuestionSubmissionServiceImpl(\n    config, httpService, apiResponseValidator);\n  const autoCompleteService = new AutocompleteServiceImpl(config, httpService, apiResponseValidator);\n\n  return new AnswersCore(searchService, questionSubmissionService, autoCompleteService);\n}\n\nexport { AnswersCore };\nexport * from './models';","import {\n  AnswersCore,\n  AutocompleteResult,\n  Facet,\n  Filter,\n  SortBy,\n  VerticalResults,\n  LocationBias,\n  SearchIntent,\n  DisplayableFacet,\n  AppliedQueryFilter,\n} from '../node_modules/@yext/answers-core';\ntype AutocompleteState = {\n  autocompleteOptions: {\n    value: string;\n    type: 'RECENT' | 'SUGGESTION';\n    key: string;\n    highlighted?: boolean;\n  }[];\n  loading: boolean;\n  querySuggestions: AutocompleteResult[];\n  recentSearches: {\n    query: string;\n  }[];\n  selectedIndex: number;\n};\n\nexport type AppliedFilter = {\n  displayName: string;\n  fieldId: string;\n  values: string[];\n  source: 'FACET' | 'NLP';\n};\n\nexport type InitialStateType = {\n  loading: boolean;\n  error: any;\n  hasSearched: boolean; // Wheter or not a search has been run\n  core: AnswersCore;\n  verticalKey: string;\n  visibleSearchTerm: string; //Visible search term in the search bar\n  lastSearchedTerm: string; // last searched term (search term of the results)\n  originalSearchTerm: string; // search term that might be hidden due to showing autocomplete\n  verticalresults?: VerticalResults;\n  results: any[];\n  facets: Facet[];\n  displayableFacets: DisplayableFacet[];\n  facetFilters: Filter[];\n  appliedFilters: AppliedFilter[];\n  sortBys?: SortBy[];\n  autocomplete: AutocompleteState;\n  debug: boolean;\n  facetSorter?: (facets: Facet[]) => Facet[];\n  locationBias?: LocationBias;\n  searchIntents?: SearchIntent[];\n  appliedQueryFilters?: AppliedQueryFilter[];\n};\n\nexport const initialState: InitialStateType = {\n  loading: false,\n  error: false,\n  //@ts-ignore\n  core: undefined, // Will be set by initial load\n  hasSearched: false,\n  verticalKey: '',\n  visibleSearchTerm: '',\n  lastSearchedTerm: '',\n  originalSearchTerm: '',\n  verticalresults: undefined,\n  results: [],\n  entities: [],\n  facets: [],\n  displayableFacets: [],\n  appliedQueryFilters: [],\n  facetFilters: [],\n  autocomplete: {\n    querySuggestions: [],\n    loading: false,\n    recentSearches: [],\n    autocompleteOptions: [],\n    selectedIndex: -1,\n  },\n  debug: false,\n  locationBias: undefined,\n  searchIntents: [],\n};\n","import { DisplayableFacet, DisplayableFacetOption, Facet } from '../node_modules/@yext/answers-core';\n\nexport function createFacets(facets: any): DisplayableFacet[] {\n  if (!facets) {\n    return [];\n  }\n\n  return facets.map((facet: Facet) => {\n    const fieldId = facet.fieldId ? facet.fieldId : 'emptyFieldId'\n    const displayName = facet.fieldId ? facet.fieldId : 'emptyDisplayName'\n    const options = facet.options ? createFacetOptions(facet.options) : [];\n\n    return ({\n      fieldId: fieldId,\n      displayName: displayName,\n      options: options\n  })\n});\n}\n\nfunction createFacetOptions(options: any[]): DisplayableFacetOption[] {\n  return options.map((option: any) => {\n    return {\n      displayName: option.displayName,\n      count: option.count,\n      selected: option.selected,\n      matcher: option.matcher,\n      value: option.value as string | number | boolean\n    };\n  });\n}\n","import { Facet, Filter, DisplayableFacet } from '../node_modules/@yext/answers-core';\nimport { AppliedFilter } from './initialState';\nimport { createFacets } from './createFacets';\n\nexport const getFacetFilters = (facets: Facet[]): Filter[] => {\n  //this needs to return all selected FILTERS - which no longer exist on facet objects\n  // theoretically it could just be all of the facets\n  const displayableFacets = createFacets(facets);\n\n  // turn facets into DisplayableFacets\n  return displayableFacets\n    .map(f => {\n      return [\n        ...f.options\n          .filter(o => {\n           return o.selected;\n          })\n          .map(o => {\n            // building a new filter object\n            const filter: Filter = {\n              fieldId: f.fieldId,\n              matcher: o.matcher,\n              value: o.value,\n            };\n            return filter;\n          }),\n      ];\n    })\n    .flat();\n};\n\nexport const getFacetAppliedFilters = (facets: Facet[]): AppliedFilter[] => {\n  return facets\n    .map(f => {\n      return [\n        ...f.options\n          .filter(o => o.value)\n          .map(o => {\n            const filter: AppliedFilter = {\n              displayName: f.fieldId,\n              fieldId: f.fieldId,\n              source: 'FACET',\n              values: [o.value.toString()],\n            };\n            return filter;\n          }),\n      ];\n    })\n    .flat();\n};\n\nexport const toggleFacetObject = (\n  facets: Facet[],\n  facetFieldId: string,\n  optionDisplayName: string\n): DisplayableFacet[] => {\n  const updatedFacets = [...facets];\n  const displayableFacets = createFacets(updatedFacets);\n\n  displayableFacets.forEach(f => {\n    if (f.fieldId === facetFieldId) {\n      f.options.forEach(o => {\n        if (o.displayName === optionDisplayName) {\n          o.selected = !o.selected;\n        } else {\n        }\n      });\n    } else return;\n  });\n\n  const filtered = displayableFacets.filter(facet => {\n    let filter = facet.options.some((option) => option.selected)\n    return filter;    \n  })\n\n  filtered.forEach(facet => {\n    facet.options = facet.options.filter(option => option.selected)\n    })\n\n  return filtered;\n};\nexport const displayableToSelectedFacets = (displayableFacets: DisplayableFacet[]): Facet[] => {\n\n  const selectedFacets = displayableFacets.filter(facet => {\n    let filter = facet.options.some((option) => option.selected)\n    return filter;    \n  })\n\n  selectedFacets.forEach(facet => {\n    facet.options = facet.options.filter(option => option.selected)\n    })\n\n  return displayableToFacets(selectedFacets);\n}\nexport const displayableToFacets = (displayableFacets: DisplayableFacet[]) : Facet[] => {\n  let facets :Facet[] = [];\n  displayableFacets.forEach((displayFacet) => {\n    facets.push({\n      fieldId: displayFacet.fieldId,\n      options: displayFacet.options\n    })\n  })\n  return facets;\n}\n\nexport const sortFacets = (facets: Facet[]) => {\n  //TODO(tredshaw): how are we going to sort Facets/do we even need to anymore\n  // this shoudl take Facets and return displayableFacets?\n  return facets\n  // return facets.map(facet => {\n  //   console.log(facet)\n  //   return {\n  //     ...facet,\n  //     options: facet.options.sort((a,b) => {\n  //       if(a.)\n  //     })\n  //   }\n  // });\n  // return facets.map(f => {\n  //   return {\n  //     ...f,\n  //     options: f.options.sort((a, b) => {\n  //       if (a.selected && b.selected) return b.count - a.count;\n  //       else if (a.selected) return -1;\n  //       else if (b.selected) return 1;\n  //       else return b.count - a.count;\n  //     }),\n  //   };\n  // });\n};\n","import {\n  AutocompleteResult,\n  Facet,\n  provideCore,\n  SortBy,\n  VerticalSearchResponse,\n  DisplayableFacet,\n  LocationBias,\n  AppliedQueryFilter,\n} from '../node_modules/@yext/answers-core';\nimport { AnswersConfig } from './AnswersConfig';\nimport { getFacetFilters, sortFacets } from './facetUtilties';\nimport { AppliedFilter, InitialStateType } from './initialState';\nimport { createFacets } from './createFacets';\nexport type Action =\n  | {\n      type: 'SET_CONFIGURATION';\n      config: AnswersConfig;\n      initialState: InitialStateType;\n    }\n  | { type: 'PREPARE_FOR_SEARCH'; searchTerm: string }\n  | { type: 'ON_SEARCH_TERM_CHANGE'; searchTerm: string }\n  | { type: 'SET_VERTICAL_RESPONSE'; response: VerticalSearchResponse }\n  | {\n      type: 'SET_AUTOCOMPLETE';\n      querySuggestions: AutocompleteResult[];\n      recentSearches: { query: string }[];\n    }\n  | { type: 'NEXT_AUTOCOMPLETE_OPTION' }\n  | { type: 'SET_ERROR'; error: any }\n  | { type: 'PREVIOUS_AUTOCOMPLETE_OPTION' }\n  | { type: 'APPEND_RESULTS'; results: any[] }\n  | { type: 'UPDATE_SORT_BYS'; sortBys?: SortBy[] }\n  | { type: 'SIMPLE_FILTER_UPDATE'; simpleFilters?: Facet[] }\n  | { type: 'UPDATE_FACETS'; facets: Facet[] }\n  | { type: 'UPDATE_DISPLAYABLE_FACETS'; displayableFacets: DisplayableFacet[] }\n  | { type: 'UPDATE_APPLIED_QUERY_FILTERS'; appliedQueryFilters: AppliedQueryFilter[] }\n  | { type: 'UPDATE_LOCATION_BIAS'; locationBias: LocationBias }\n\nconst reducer = (state: InitialStateType, action: Action): InitialStateType => {\n  if (\n    (action.type === 'SET_CONFIGURATION' && action.config.debug) ||\n    state.debug\n  ) {\n    console.log(action.type, action);\n  }\n  const { autocomplete, facetSorter } = state;\n  switch (action.type) {\n    case 'PREPARE_FOR_SEARCH':\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        autocomplete: {\n          loading: false,\n          autocompleteOptions: [],\n          recentSearches: [],\n          querySuggestions: [],\n          selectedIndex: -1,\n        },\n        lastSearchedTerm: action.searchTerm,\n        visibleSearchTerm: action.searchTerm,\n        originalSearchTerm: action.searchTerm,\n      };\n    case 'SET_CONFIGURATION': {\n      const { config, initialState } = action;\n      const core = provideCore(config);\n      return {\n        ...state,\n        ...initialState,\n        core,\n        ...config,\n        debug: config.debug || false,\n      };\n    }\n    case 'ON_SEARCH_TERM_CHANGE':\n      return {\n        ...state,\n        visibleSearchTerm: action.searchTerm,\n        originalSearchTerm: action.searchTerm,\n      };\n    case 'SET_ERROR':\n      if (state.debug) {\n        console.log(action.error);\n      }\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case 'SET_VERTICAL_RESPONSE': {\n      const { response } = action;\n      const facets = createFacets(response.facets); //TODO(tredshaw): all displayable facets set to true\n      const newFacetFilters = getFacetFilters(facets);\n      const facetFilters = [\n        ...state.facetFilters.filter(f => {\n          const matchedIndex = newFacetFilters.findIndex((g) => {\n            return g.fieldId === f.fieldId && g.value === f.value\n          }\n          );\n          return matchedIndex === -1;\n        }),\n        ...newFacetFilters,\n      ];\n\n      const appliedFilters: AppliedFilter[] = [];\n\n      // response.verticalResults.appliedQueryFilters.forEach(q => {\n      //   const isFacet =\n      //     facetFilters.findIndex(\n      //       f =>\n      //         q.filter.fieldId === f.fieldId &&\n      //         q.displayValue === f.value\n      //     ) === -1;\n\n      //   if (!isFacet) {\n      //     console.log('NLP Filter');\n      //   }\n      // });\n\n      facets.forEach(f => {\n        f.options.forEach(o => {\n          if (o.selected === true) {\n            //  Check if Facet Field Exists\n            const matchedIndex = appliedFilters.findIndex(\n              af => af.fieldId === f.fieldId\n            );\n            if (matchedIndex !== -1) {\n              appliedFilters[matchedIndex].values.push(o.displayName);\n            } else {\n              appliedFilters.push({\n                displayName: o.displayName,\n                fieldId: f.fieldId,\n                source: 'FACET',\n                values: [o.value.toString()],\n              });\n            }\n          }\n        });\n      });\n\n      let returnFacets = facetSorter ? facetSorter(facets) : sortFacets(facets);\n      return {\n        ...state,\n        loading: false,\n        autocomplete: {\n          loading: false,\n          autocompleteOptions: [],\n          recentSearches: [],\n          querySuggestions: [],\n          selectedIndex: -1,\n        },\n        error: false,\n        verticalresults: response.verticalResults,\n        hasSearched: true,\n        results: response.verticalResults.results,\n        facets: returnFacets,\n        displayableFacets: createFacets(returnFacets),\n        appliedFilters,\n        facetFilters,\n        locationBias: response.locationBias,\n        searchIntents: response.searchIntents,\n      };\n    }\n    case 'SET_AUTOCOMPLETE':\n      const { querySuggestions, recentSearches } = action;\n      return {\n        ...state,\n        autocomplete: {\n          loading: false,\n          querySuggestions,\n          selectedIndex: -1,\n          recentSearches,\n          autocompleteOptions: [\n            ...recentSearches.map(s => {\n              return {\n                value: s.query,\n                type: 'RECENT',\n              };\n            }),\n            ...querySuggestions\n              .filter(q => {\n                // Dedupe recent searches\n                return !recentSearches.map(s => s.query).includes(q.value);\n              })\n              .map(s => {\n                return {\n                  ...s,\n                  type: 'SUGGESTION',\n                };\n              }),\n          ].map(s => {\n            return {\n              ...s,\n              key: s.type + s.value,\n            };\n          }) as { value: string; type: 'RECENT' | 'SUGGESTION'; key: string }[],\n        },\n      };\n    case 'NEXT_AUTOCOMPLETE_OPTION':\n      const nextIndex = Math.min(\n        autocomplete.autocompleteOptions.length - 1,\n        autocomplete.selectedIndex + 1\n      );\n      return {\n        ...state,\n        autocomplete: {\n          ...autocomplete,\n          autocompleteOptions: state.autocomplete.autocompleteOptions.map(\n            (o, i) => {\n              return {\n                ...o,\n                highlighted: i === nextIndex,\n              };\n            }\n          ),\n          selectedIndex: nextIndex,\n        },\n        visibleSearchTerm: autocomplete.autocompleteOptions[nextIndex].value,\n      };\n\n    case 'PREVIOUS_AUTOCOMPLETE_OPTION':\n      const prevIndex = Math.max(-1, autocomplete.selectedIndex - 1);\n\n      const newVisibleSearchTerm =\n        prevIndex === -1\n          ? state.originalSearchTerm\n          : autocomplete.autocompleteOptions[prevIndex].value;\n\n      return {\n        ...state,\n        autocomplete: {\n          ...autocomplete,\n          autocompleteOptions: state.autocomplete.autocompleteOptions.map(\n            (o, i) => {\n              return {\n                ...o,\n                highlighted: i === prevIndex,\n              };\n            }\n          ),\n          selectedIndex: prevIndex,\n        },\n        visibleSearchTerm: newVisibleSearchTerm,\n      };\n\n    case 'UPDATE_LOCATION_BIAS':\n      const { locationBias } = action;\n      return {\n        ...state,\n        locationBias: locationBias\n      };\n    case 'APPEND_RESULTS':\n      return {\n        ...state,\n        results: [...state.results, ...action.results],\n      };\n    case 'UPDATE_SORT_BYS':\n      return {\n        ...state,\n        sortBys: action.sortBys,\n      };\n    case 'UPDATE_DISPLAYABLE_FACETS':\n      const { displayableFacets } = action;\n      return {\n        ...state,\n        displayableFacets: displayableFacets,\n      };\n    case 'UPDATE_APPLIED_QUERY_FILTERS':\n      const { appliedQueryFilters } = action;\n      return {\n        ...state,\n        appliedQueryFilters: appliedQueryFilters,\n      };\n    case 'UPDATE_FACETS':\n      const { facets } = action;\n      return {\n        ...state,\n        facetFilters: getFacetFilters(facets),\n        facets,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { createContext, Dispatch, useReducer } from 'react';\nimport { initialState, InitialStateType } from './initialState';\nimport reducer, { Action } from './reducer';\n\nexport const AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<Action>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst AnswersStore = ({ children }: { children: React.ReactNode }) => {\n  //@ts-ignore\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AnswersStore;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import {\n  Facet,\n  SortBy,\n  VerticalSearchResponse,\n  Matcher,\n  LocationBias,\n  LatLong,\n  DisplayableFacet,\n} from '../node_modules/@yext/answers-core';\nimport { useContext } from 'react';\nimport RecentSearches from 'recent-searches';\nimport { AnswersConfig } from './AnswersConfig';\nimport { AppContext } from './AnswersStore';\nimport { toggleFacetObject, displayableToFacets, displayableToSelectedFacets } from './facetUtilties';\nimport { InitialStateType } from './initialState';\nimport { createFacets } from './createFacets';\n\nconst recentSearchesController = new RecentSearches();\n\nexport const useAnswers = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const {\n    lastSearchedTerm,\n    visibleSearchTerm,\n    facets,\n    autocomplete,\n    sortBys,\n    verticalKey,\n    results,\n    core,\n  } = state;\n\n  const setConfiguration = (\n    config: AnswersConfig,\n    initialState: InitialStateType\n  ) => {\n    dispatch({\n      type: 'SET_CONFIGURATION',\n      config,\n      initialState,\n    });\n  };\n\n  const runSearch = async (\n    searchTerm: string = visibleSearchTerm,\n    clearFacets = true\n  ) => {\n    recentSearchesController.setRecentSearch(searchTerm);\n\n    handleSearch(searchTerm, clearFacets ? [] : facets, sortBys);\n  };\n\n  const chooseAutocompleteOption = (index: number) => {\n    const option = autocomplete.autocompleteOptions[index];\n    if (option) {\n      runSearch(option.value);\n    } else {\n      console.log('Index does not exist');\n    }\n  };\n\n  const handleSearch = async (\n    searchTerm: string,\n    facets?: Facet[],\n    sortBys?: SortBy[],\n  ) => {\n    dispatch({\n      type: 'PREPARE_FOR_SEARCH',\n      searchTerm: searchTerm,\n    });\n\n    dispatch({\n      type: 'UPDATE_FACETS',\n      facets: facets || [],\n    });\n\n    dispatch({\n      type: 'UPDATE_DISPLAYABLE_FACETS',\n      displayableFacets: createFacets(facets),\n    });\n\n    try {\n      const res: VerticalSearchResponse = await core.verticalSearch({\n        query: searchTerm,\n        context: {},\n        verticalKey,\n        retrieveFacets: true,\n        sortBys,\n        facets: displayableToSelectedFacets(createFacets(facets)),\n      });\n\n      dispatch({\n        type: 'UPDATE_APPLIED_QUERY_FILTERS',\n        appliedQueryFilters: res.verticalResults.appliedQueryFilters || [],\n      });\n\n      dispatch({\n        type: 'SET_VERTICAL_RESPONSE',\n        response: res,\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        error,\n      });\n    }\n  };\n\n  const handleLocationBiasSearch = async (\n    searchTerm: string,\n    locationBias: LocationBias,\n    displayableFacets: DisplayableFacet[],\n  ) => {\n    dispatch({\n      type: 'PREPARE_FOR_SEARCH',\n      searchTerm: searchTerm,\n    });\n\n    try {\n      const location : LatLong = {\n        latitude: locationBias.latitude,\n        longitude: locationBias.longitude\n      }\n\n      const res: VerticalSearchResponse = await core.verticalSearch({\n        query: searchTerm,\n        context: {},\n        verticalKey,\n        retrieveFacets: true,\n        sortBys,\n        facets: displayableToSelectedFacets(displayableFacets),\n        location: location\n      });\n\n\n      dispatch({\n        type: 'SET_VERTICAL_RESPONSE',\n        response: res,\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        error,\n      });\n    }\n  };\n\n  const handleSearchTermChange = async (\n    searchTerm: string = visibleSearchTerm\n  ) => {\n    dispatch({\n      type: 'ON_SEARCH_TERM_CHANGE',\n      searchTerm,\n    });\n    const res = await core.verticalAutocomplete({\n      input: searchTerm,\n      verticalKey,\n    });\n    dispatch({\n      type: 'SET_AUTOCOMPLETE',\n      querySuggestions: res.results,\n      recentSearches: recentSearchesController.getRecentSearches(searchTerm),\n    });\n  };\n\n  const updateSortBys = async (\n    sortBys: SortBy[] | undefined,\n    updateSearchResults = true\n  ) => {\n    dispatch({\n      type: 'UPDATE_SORT_BYS',\n      sortBys,\n    });\n\n    if (updateSearchResults) {\n      handleSearch(lastSearchedTerm, facets, sortBys);\n    }\n  };\n\n  const toggleFacet = async (\n    facetFieldId: string,\n    optionDisplayName: string,\n    updateSearchResults = true\n  ) => {\n    const updatedFacets = toggleFacetObject(\n      state.facets,\n      facetFieldId,\n      optionDisplayName\n    );\n    dispatch({\n      type: 'UPDATE_FACETS',\n      facets:  displayableToFacets(updatedFacets),\n    });\n\n    dispatch({\n      type: 'UPDATE_DISPLAYABLE_FACETS',\n      displayableFacets: updatedFacets\n    })\n    // let removed = false;\n    \n    if (updateSearchResults) {\n      const regularFacets = displayableToFacets(updatedFacets);\n\n      //TODO(tredshaw): this sets all facets to selected = true\n      handleSearch(lastSearchedTerm, regularFacets, sortBys);\n    }\n  };\n\n  const loadMore = async (facets: Facet[]) => {\n\n    dispatch({\n      type: 'UPDATE_FACETS',\n      facets: facets || [],\n    });\n\n    const res: VerticalSearchResponse = await core.verticalSearch({\n      query: lastSearchedTerm,\n      context: {},\n      verticalKey,\n      retrieveFacets: true,\n      facets: displayableToSelectedFacets(createFacets(facets)),\n      offset: results.length,\n    });\n\n    dispatch({\n      type: 'APPEND_RESULTS',\n      results: res.verticalResults.results,\n    });\n  };\n\n  const nextAutocompleteOption = () => {\n    dispatch({ type: 'NEXT_AUTOCOMPLETE_OPTION' });\n  };\n\n  const prevAutocompleteOption = () => {\n    dispatch({ type: 'PREVIOUS_AUTOCOMPLETE_OPTION' });\n  };\n\n  const clearSearch = () => {\n    const displayFacets = createFacets(facets)\n    dispatch({ type: 'ON_SEARCH_TERM_CHANGE', searchTerm: '' });\n    dispatch({\n      type: 'UPDATE_FACETS',\n      facets: displayFacets.map(f => {\n        return {\n          ...f,\n          options: f.options.map(o => {\n            return {\n              ...o,\n              selected: false,\n            };\n          }),\n        };\n      }),\n    });\n    dispatch({ type: 'UPDATE_SORT_BYS', sortBys: undefined });\n    handleSearch('', undefined, undefined);\n  };\n\n  const simpleFilter = async (\n    fieldId: string,\n    value = 'test'\n  ) => {\n      let facets: Facet[] = [];\n      facets.push({\n        fieldId: fieldId,\n        options: [\n          {matcher: Matcher.Equals, value: value}\n        ]\n      });\n        dispatch({\n          type: 'SIMPLE_FILTER_UPDATE',\n          simpleFilters: facets,\n        });\n\n      handleSearch(lastSearchedTerm, facets, undefined);\n  };\n\n  return {\n    state,\n    actions: {\n      runSearch,\n      handleLocationBiasSearch,\n      handleSearchTermChange,\n      chooseAutocompleteOption,\n      toggleFacet,\n      loadMore,\n      updateSortBys,\n      setConfiguration,\n      nextAutocompleteOption,\n      prevAutocompleteOption,\n      clearSearch,\n      simpleFilter\n    },\n  };\n};\n","import React, { useEffect } from 'react';\nimport { QueryParamProvider } from 'use-query-params';\nimport { AnswersConfig } from './AnswersConfig';\nimport AnswersStore from './AnswersStore';\nimport { initialState } from './initialState';\nimport { useAnswers } from './useAnswers';\nimport { useQueryParamManager } from './useQueryParamManager';\n\ntype Props = {\n  //Insert Props Here\n  children: React.ReactNode;\n  config: AnswersConfig;\n};\n\nconst AnswersContext: React.FC<Props> = props => {\n  return (\n    <QueryParamProvider>\n      <AnswersStore>\n        <Inner {...props} />\n      </AnswersStore>\n    </QueryParamProvider>\n  );\n};\n\nconst Inner = ({ config, children }: Props) => {\n  const { runSearchOnLoad = false } = config;\n  const {\n    state,\n    actions: { runSearch, setConfiguration, handleSearchTermChange },\n  } = useAnswers();\n\n  const queryParams = useQueryParamManager();\n  useEffect(() => {\n    if (!state.verticalKey) {\n      setConfiguration(config, {\n        ...initialState,\n        lastSearchedTerm: queryParams.query || '',\n        originalSearchTerm: queryParams.query || '',\n        visibleSearchTerm: queryParams.query || '',\n        facetFilters: queryParams.filters || [],\n        sortBys: queryParams.sortBys,\n      });\n    }\n    if (runSearchOnLoad && state.verticalKey) {\n      runSearch(undefined, false);\n    }\n\n    if (state.verticalKey) {\n      handleSearchTermChange();\n    }\n  }, [runSearchOnLoad, state.verticalKey]);\n\n  return <>{children}</>;\n};\n\nexport default AnswersContext;\n","import { useEffect } from 'react';\nimport { JsonParam, StringParam, useQueryParams } from 'use-query-params';\nimport { getFacetFilters } from './facetUtilties';\nimport { useAnswers } from './useAnswers';\n\nexport const useQueryParamManager = () => {\n  const { state } = useAnswers();\n  const [queryParams, setQueryParams] = useQueryParams({\n    query: StringParam,\n    filters: JsonParam,\n    sortBys: JsonParam,\n  });\n\n  const facetFilters = getFacetFilters(state.facets);\n  useEffect(() => {\n    setQueryParams({\n      query: state.lastSearchedTerm || undefined,\n      filters: facetFilters.length > 0 ? facetFilters : undefined,\n      sortBys: state.sortBys || undefined,\n    });\n  }, [state.lastSearchedTerm, facetFilters]);\n\n  return queryParams;\n};\n"],"names":["Source","searchService","questionSubmissionService","autoCompleteService","this","AnswersCore","request","universalSearch","verticalSearch","submitQuestion","universalAutocomplete","verticalAutocomplete","filterSearch","createFilter","filter","fieldId","Object","keys","matcher","value","createLocationBias","data","latitude","longitude","displayName","locationDisplayName","method","accuracy","createSpellCheck","originalQuery","correctedQuery","type","QuerySource","DirectAnswerType","ResultsFactory","results","source","map","result","index","resultIndex","KnowledgeManager","_this","fromKnowledgeManager","Google","fromGoogleCustomSearchEngine","Bing","fromBingCustomSearchEngine","Zendesk","fromZendeskSearchEngine","Algolia","fromAlgoliaSearchEngine","fromGeneric","rawData","name","description","link","website","id","distance","distanceFromFilter","highlightedFields","entityType","htmlTitle","replace","htmlSnippet","snippet","url","title","html_url","objectID","Generic","fieldValues","createAppliedQueryFilter","displayKey","displayValue","details","createVerticalResults","console","log","appliedQueryFilters","queryDurationMillis","create","resultsCount","verticalKey","verticalConfigId","createVerticalSearchResponse","facets","response","Error","verticalResults","queryId","searchIntents","facet","options","option","count","selected","spellCheck","locationBias","allResultsForVertical","alternativeVerticals","modules","uuid","meta","createDirectAnswer","isFeaturedSnippetDirectAnswer","FeaturedSnippet","FieldValue","answer","relatedResult","fromDirectAnswer","relatedItem","entityName","fieldName","fieldApiName","fieldType","shapeFilterForApi","isCombinedFilter","undefined","filters","combinator","config","httpService","apiResponseValidator","universalSearchEndpoint","endpoints","verticalSearchEndpoint","SearchServiceImpl","injectToStringMethods","queryParams","input","query","experienceKey","api_key","apiKey","v","version","experienceVersion","location","toString","locale","skipSpellCheck","sessionTrackingEnabled","queryTrigger","context","JSON","stringify","referrerPageUrl","querySource","Standard","get","_b","validationResult","validate","Promise","reject","Array","isArray","directAnswer","staticFilters","shapeCombinedFilterForApi","combinedFilter","shapedFilters","_i","push","length","limit","offset","retrieveFacets","facetFilters","reduce","obj","shapedFacets","shapeFacetOptionArrayForApi","sortBys","locationRadius","_c","endpoint","questionSubmission","QuestionSubmissionServiceImpl","post","email","entityId","questionDescription","questionLanguage","questionText","site","mode","headers","Content-Type","_a","sanitizeQueryParams","params","forEach","key","RequestMethods","HttpServiceImpl","reqInitWithMethod","GET","fetch","then","res","json","body","reqInit","sanitizedBodyParams","reqInitWithMethodAndBody","POST","urlWithParams","parsedUrl","URL","urlParams","URLSearchParams","search","substring","sanitizedParams","append","updatedUrl","origin","pathname","paramsString","addParamsToURL","createAutocompleteResult","matchedSubstrings","createAutocompleteResponse","inputIntents","queryIntents","createFilterSearchResponse","isSectioned","sections","responseResults","section","label","sectioned","Matcher","FilterCombinator","QueryTrigger","SortType","Direction","LocationBiasMethod","SearchIntent","SpellCheckType","httpRequester","universalEndpoint","verticalEndpoint","filterEndpoint","AutocompleteServiceImpl","searchParams","fields","serializeSearchParameterFields","search_parameters","entityTypeId","shouldFetchEntities","message","code","_super","__extends","ApiResponseValidator","apiResponse","validateResponseProp","validateMetaProp","checkForApiErrors","testFn","find","AnswersError","errors","error","provideCore","initialState","loading","core","hasSearched","visibleSearchTerm","lastSearchedTerm","originalSearchTerm","verticalresults","entities","displayableFacets","autocomplete","querySuggestions","recentSearches","autocompleteOptions","selectedIndex","debug","createFacets","getFacetFilters","f","o","flat","toggleFacetObject","facetFieldId","optionDisplayName","filtered","some","displayableToSelectedFacets","selectedFacets","displayableToFacets","displayFacet","reducer","state","action","facetSorter","searchTerm","newFacetFilters","findIndex","g","appliedFilters","matchedIndex","af","values","returnFacets","s","q","includes","nextIndex","Math","min","i","highlighted","prevIndex","max","newVisibleSearchTerm","AppContext","createContext","dispatch","AnswersStore","children","useReducer","React","Provider","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","Generator","Context","_invoke","arg","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","invoke","__await","unwrapped","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","constructor","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","recentSearchesController","RecentSearches","useAnswers","useContext","runSearch","clearFacets","setRecentSearch","handleSearch","handleLocationBiasSearch","handleSearchTermChange","getRecentSearches","updateSortBys","updateSearchResults","actions","chooseAutocompleteOption","toggleFacet","updatedFacets","regularFacets","loadMore","setConfiguration","nextAutocompleteOption","prevAutocompleteOption","clearSearch","displayFacets","simpleFilter","Equals","simpleFilters","Inner","runSearchOnLoad","useQueryParams","StringParam","JsonParam","setQueryParams","useEffect","useQueryParamManager","props","QueryParamProvider"],"mappings":"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"}